üìå –ö–∞–∫ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å real-time –¥–∞–Ω–Ω—ã–µ –∏–∑ PySpark Streaming –≤ ClickHouse?
–¢—ã –ø—Ä–∞–≤, –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Kafka –Ω–µ –¥–æ–ª–∂–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –≤ ClickHouse –æ—Ç–¥–µ–ª—å–Ω—ã–º INSERT ‚Äì —ç—Ç–æ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.
–í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º—ã –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ PySpark Streaming –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ö –ø–∞—á–∫–∞–º–∏ (batch insert).

üî• –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?

1Ô∏è‚É£ PySpark Streaming –ø–æ–ª—É—á–∞–µ—Ç –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Kafka
2Ô∏è‚É£ –î–∞–Ω–Ω—ã–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—é—Ç—Å—è –≤ micro-batches
3Ô∏è‚É£ –ö–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥ (–∏–ª–∏ N –∑–∞–ø–∏—Å–µ–π) PySpark –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏—Ö –ø–∞—á–∫–æ–π –≤ ClickHouse
4Ô∏è‚É£ –¢–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Spark Structured Streaming + Batch Insert

üîπ –ö–∞–∫ —ç—Ç–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è?
üìå –ü—Ä–∏–º–µ—Ä PySpark Streaming ‚Üí ClickHouse —á–µ—Ä–µ–∑ batch insert

1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–∞–µ–º PySpark Streaming –∫ Kafka

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, from_json
from pyspark.sql.types import StructType, StructField, StringType
import json
from clickhouse_driver import Client

# 1. –°–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é Spark
spark = SparkSession.builder.appName("KafkaToClickHouse").getOrCreate()

# 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ö–µ–º—É JSON-—Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Kafka
schema = StructType([
    StructField("text", StringType(), True),
    StructField("timestamp", StringType(), True),
    StructField("sentiment", StringType(), True)
])

# 3. –ß–∏—Ç–∞–µ–º –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Kafka
df = spark.readStream.format("kafka") \
    .option("kafka.bootstrap.servers", "localhost:9092") \
    .option("subscribe", "telegram_stream") \
    .load()

# 4. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Kafka JSON –≤ DataFrame
df = df.selectExpr("CAST(value AS STRING)").select(from_json(col("value"), schema).alias("data")).select("data.*")

‚úÖ –¢–µ–ø–µ—Ä—å PySpark –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∂–∏–º–µ —Å—Ç—Ä–∏–º–∞.

2Ô∏è‚É£ –î–µ–ª–∞–µ–º Batch Insert –≤ ClickHouse
–¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∫–æ–ø–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏—Ö –ø–∞—á–∫–∞–º–∏.

üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º foreachBatch –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ ClickHouse

def write_to_clickhouse(batch_df, batch_id):
    """–§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ ClickHouse"""
    if batch_df.count() > 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞—Ç—á–µ
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º DataFrame –≤ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π
        data = [(row["text"], row["timestamp"], row["sentiment"]) for row in batch_df.collect()]
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ ClickHouse
        clickhouse_client = Client("localhost")
        
        # –î–µ–ª–∞–µ–º batch insert
        clickhouse_client.execute("INSERT INTO telegram_sentiment (text, timestamp, sentiment) VALUES", data)
        print(f"Inserted {len(data)} rows into ClickHouse")

# 5. –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É batch insert
df.writeStream \
    .foreachBatch(write_to_clickhouse) \
    .outputMode("append") \
    .start() \
    .awaitTermination()
	
‚úÖ –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10 —Å–µ–∫—É–Ω–¥) –¥–∞–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ ClickHouse –ø–∞—á–∫–∞–º–∏.

üîπ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?

1Ô∏è‚É£ PySpark —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ micro-batches
2Ô∏è‚É£ –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (–∏–ª–∏ –¥—Ä—É–≥–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª) –ø–∞—á–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤ write_to_clickhouse()
3Ô∏è‚É£ –í —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –æ–¥–Ω–∏–º INSERT –≤ ClickHouse
4Ô∏è‚É£ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!

üìå –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è batch insert –≤ ClickHouse
‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–º–µ—Ä batch insert
–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –º–Ω–æ–≥–æ, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –º–∏–∫—Ä–æ–±–∞—Ç—á–µ–π:

df.writeStream \
    .foreachBatch(write_to_clickhouse) \
    .trigger(processingTime="5 seconds") \  # –í—Å—Ç–∞–≤–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    .outputMode("append") \
    .start() \
    .awaitTermination()
‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å insert —á–µ—Ä–µ–∑ batch_size –≤ ClickHouse
–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –±–∞—Ç—á–∏ (1000+ –∑–∞–ø–∏—Å–µ–π –∑–∞ —Ä–∞–∑):

clickhouse_client.execute("INSERT INTO telegram_sentiment FORMAT JSONEachRow", data, settings={"max_insert_block_size": 1000})
üìå –ò—Ç–æ–≥
üî• –¢–µ–ø–µ—Ä—å PySpark Streaming –≤—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ ClickHouse –Ω–µ –ø–æ –æ–¥–Ω–æ–º—É, –∞ –±–∞—Ç—á–∞–º–∏!
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º foreachBatch() –≤–º–µ—Å—Ç–æ foreach() –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏
‚úÖ –ö–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥ –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–∞—á–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ ClickHouse
‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ, –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—è –±–∞–∑—É –º–∞–ª–µ–Ω—å–∫–∏–º–∏ insert'–∞–º–∏